:root {
  --neon-blue: #00d4ff;
  --neon-purple: #9333ea;
  --neon-pink: #ec4899;
  --neon-green: #10b981;
  --neon-yellow: #fbbf24;
  --cyber-dark: rgba(6, 10, 58, 0.95);
  --cyber-darker: rgba(3, 5, 29, 0.98);
  --glass-bg: rgba(255, 255, 255, 0.05);
  --glass-border: rgba(255, 255, 255, 0.1);
}

.app-container {
  position: relative;
  min-height: 100vh;
  overflow-x: hidden;
  background: var(--cyber-dark);
}

.background-layer {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -1;
}

.content-layer {
  position: relative;
  z-index: 1;
}

.glass-card {
  background: var(--glass-bg);
  backdrop-filter: blur(20px);
  border: 1px solid var(--glass-border);
  border-radius: 16px;
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3),
    inset 0 1px 0 rgba(255, 255, 255, 0.1);
}

.glass-card-main {
  background: rgba(255, 255, 255, 0.02);
  backdrop-filter: blur(30px);
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: 24px;
  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.4),
    inset 0 1px 0 rgba(255, 255, 255, 0.1);
  transition: all 0.3s ease;
}

.glass-card-main:hover {
  border-color: rgba(147, 51, 234, 0.3);
  box-shadow: 0 25px 80px rgba(147, 51, 234, 0.2),
    inset 0 1px 0 rgba(255, 255, 255, 0.15);
}

.glass-card-stats {
  background: rgba(255, 255, 255, 0.03);
  backdrop-filter: blur(15px);
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: 12px;
  padding: 16px 20px;
  transition: all 0.3s ease;
  cursor: pointer;
}

.glass-card-stats:hover {
  background: rgba(255, 255, 255, 0.05);
  transform: translateY(-2px);
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
}

.glass-card-info {
  background: rgba(16, 185, 129, 0.05);
  backdrop-filter: blur(15px);
  border: 1px solid rgba(16, 185, 129, 0.2);
  border-radius: 16px;
  padding: 20px;
}

.glass-warning {
  background: rgba(251, 191, 36, 0.05);
  backdrop-filter: blur(15px);
  border: 1px solid rgba(251, 191, 36, 0.2);
  border-radius: 16px;
  padding: 16px 20px;
}

.glass-button {
  display: flex;
  align-items: center;
  gap: 8px;
  padding: 8px 16px;
  background: var(--glass-bg);
  backdrop-filter: blur(15px);
  border: 1px solid var(--glass-border);
  border-radius: 12px;
  color: rgba(255, 255, 255, 0.9);
  font-size: 14px;
  font-weight: 500;
  text-decoration: none;
  transition: all 0.3s ease;
  cursor: pointer;
}

.glass-button:hover {
  background: rgba(255, 255, 255, 0.1);
  border-color: var(--neon-blue);
  color: white;
  box-shadow: 0 0 20px rgba(0, 212, 255, 0.3);
  transform: translateY(-1px);
}

.glass-button-danger {
  display: flex;
  align-items: center;
  gap: 8px;
  padding: 8px 16px;
  background: rgba(239, 68, 68, 0.05);
  backdrop-filter: blur(15px);
  border: 1px solid rgba(239, 68, 68, 0.2);
  border-radius: 12px;
  color: rgba(239, 68, 68, 0.9);
  font-size: 14px;
  font-weight: 500;
  transition: all 0.3s ease;
  cursor: pointer;
}

.glass-button-danger:hover {
  background: rgba(239, 68, 68, 0.1);
  border-color: #ef4444;
  color: #ef4444;
  box-shadow: 0 0 20px rgba(239, 68, 68, 0.3);
}

.glass-button-sm {
  padding: 8px;
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: 8px;
  color: white;
  transition: all 0.3s ease;
  cursor: pointer;
}

.glass-button-sm:hover {
  background: rgba(255, 255, 255, 0.2);
  transform: scale(1.1);
}

.neon-button {
  display: flex;
  align-items: center;
  gap: 8px;
  padding: 8px 16px;
  background: linear-gradient(135deg, var(--neon-purple), var(--neon-blue));
  border: none;
  border-radius: 12px;
  color: white;
  font-size: 14px;
  font-weight: 600;
  text-decoration: none;
  transition: all 0.3s ease;
  cursor: pointer;
  box-shadow: 0 0 20px rgba(147, 51, 234, 0.4);
}

.neon-button:hover {
  box-shadow: 0 0 30px rgba(147, 51, 234, 0.6);
  transform: translateY(-2px) scale(1.05);
}

.cyber-button-primary {
  padding: 16px 32px;
  background: linear-gradient(135deg, var(--neon-purple), var(--neon-blue));
  border: none;
  border-radius: 16px;
  color: white;
  font-size: 16px;
  font-weight: 700;
  text-transform: uppercase;
  letter-spacing: 1px;
  transition: all 0.3s ease;
  cursor: pointer;
  box-shadow: 0 10px 30px rgba(147, 51, 234, 0.4),
    inset 0 1px 0 rgba(255, 255, 255, 0.2);
  position: relative;
  overflow: hidden;
}

.cyber-button-primary:hover:not(:disabled) {
  transform: translateY(-3px);
  box-shadow: 0 15px 40px rgba(147, 51, 234, 0.6),
    inset 0 1px 0 rgba(255, 255, 255, 0.3);
}

.cyber-button-primary:active {
  transform: translateY(-1px);
}

.cyber-button-secondary {
  padding: 12px 24px;
  background: var(--glass-bg);
  backdrop-filter: blur(15px);
  border: 2px solid var(--neon-purple);
  border-radius: 12px;
  color: var(--neon-purple);
  font-size: 14px;
  font-weight: 600;
  transition: all 0.3s ease;
  cursor: pointer;
}

.cyber-button-secondary:hover {
  background: var(--neon-purple);
  color: white;
  box-shadow: 0 0 25px rgba(147, 51, 234, 0.5);
}

.holographic-text {
  background: linear-gradient(
    45deg,
    var(--neon-blue),
    var(--neon-purple),
    var(--neon-pink),
    var(--neon-purple),
    var(--neon-blue)
  );
  background-size: 400% 400%;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  animation: gradient-shift 4s ease-in-out infinite;
  filter: drop-shadow(0 0 10px rgba(147, 51, 234, 0.5));
}

.typing-text {
  overflow: hidden;
  white-space: nowrap;
  animation: typing 3s steps(40, end), blink-caret 0.75s step-end infinite;
}

.cyber-select {
  width: 100%;
  padding: 12px 16px;
  background: rgba(255, 255, 255, 0.05);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: 12px;
  color: white;
  font-size: 14px;
  transition: all 0.3s ease;
  cursor: pointer;
}

.cyber-select:hover {
  border-color: var(--neon-purple);
  background: rgba(255, 255, 255, 0.08);
}

.cyber-select:focus {
  outline: none;
  border-color: var(--neon-blue);
  box-shadow: 0 0 20px rgba(0, 212, 255, 0.3);
}

.cyber-select option {
  background: var(--cyber-darker);
  color: white;
}

.cyber-input {
  width: 100%;
  padding: 12px 16px;
  background: rgba(255, 255, 255, 0.05);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: 12px;
  color: white;
  font-size: 14px;
  transition: all 0.3s ease;
  outline: none;
}

.cyber-input:hover {
  border-color: var(--neon-purple);
  background: rgba(255, 255, 255, 0.08);
}

.cyber-input:focus {
  border-color: var(--neon-blue);
  box-shadow: 0 0 20px rgba(0, 212, 255, 0.3);
  background: rgba(255, 255, 255, 0.1);
}

.cyber-input::placeholder {
  color: rgba(255, 255, 255, 0.5);
}

.cyber-textarea {
  width: 100%;
  padding: 12px 16px;
  background: rgba(255, 255, 255, 0.05);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: 12px;
  color: white;
  font-size: 14px;
  font-family: inherit;
  transition: all 0.3s ease;
  outline: none;
  resize: vertical;
  min-height: 100px;
}

.cyber-textarea:hover {
  border-color: var(--neon-purple);
  background: rgba(255, 255, 255, 0.08);
}

.cyber-textarea:focus {
  border-color: var(--neon-blue);
  box-shadow: 0 0 20px rgba(0, 212, 255, 0.3);
  background: rgba(255, 255, 255, 0.1);
}

.cyber-textarea::placeholder {
  color: rgba(255, 255, 255, 0.5);
}

.cyber-button-upload {
  padding: 16px 32px;
  background: linear-gradient(135deg, var(--neon-green), #059669);
  border: none;
  border-radius: 16px;
  color: white;
  font-size: 16px;
  font-weight: 700;
  text-transform: uppercase;
  letter-spacing: 1px;
  transition: all 0.3s ease;
  cursor: pointer;
  box-shadow: 0 10px 30px rgba(16, 185, 129, 0.4),
    inset 0 1px 0 rgba(255, 255, 255, 0.2);
  position: relative;
  overflow: hidden;
}

.cyber-button-upload:hover:not(:disabled) {
  transform: translateY(-3px);
  box-shadow: 0 15px 40px rgba(16, 185, 129, 0.6),
    inset 0 1px 0 rgba(255, 255, 255, 0.3);
}

.cyber-button-upload:active {
  transform: translateY(-1px);
}

.cyber-button-upload:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

.glass-feature-badge {
  display: flex;
  align-items: center;
  gap: 8px;
  padding: 8px 16px;
  background: var(--glass-bg);
  backdrop-filter: blur(15px);
  border: 1px solid var(--glass-border);
  border-radius: 20px;
  color: rgba(255, 255, 255, 0.9);
  font-size: 12px;
  font-weight: 500;
  transition: all 0.3s ease;
}

.glass-feature-badge:hover {
  background: rgba(255, 255, 255, 0.1);
  transform: translateY(-2px);
}

.glass-link {
  display: flex;
  align-items: center;
  gap: 8px;
  padding: 12px 20px;
  background: var(--glass-bg);
  backdrop-filter: blur(15px);
  border: 1px solid var(--glass-border);
  border-radius: 16px;
  color: rgba(255, 255, 255, 0.9);
  text-decoration: none;
  font-size: 14px;
  font-weight: 500;
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
}

.glass-link:hover {
  color: white;
  border-color: var(--neon-blue);
  box-shadow: 0 0 25px rgba(0, 212, 255, 0.3);
  transform: translateY(-2px);
}

@keyframes gradient-shift {
  0%,
  100% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
}

@keyframes text-reveal {
  from {
    opacity: 0;
    transform: translateY(30px) rotateX(-90deg);
  }
  to {
    opacity: 1;
    transform: translateY(0) rotateX(0deg);
  }
}

@keyframes fade-in {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes float {
  0%,
  100% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-20px);
  }
}

@keyframes float-delayed {
  0%,
  100% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-15px);
  }
}

@keyframes bounce-slow {
  0%,
  100% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-10px);
  }
}

@keyframes typing {
  from {
    width: 0;
  }
  to {
    width: 100%;
  }
}

@keyframes blink-caret {
  from,
  to {
    border-color: transparent;
  }
  50% {
    border-color: var(--neon-blue);
  }
}

@keyframes rotate-360 {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes neon-pulse {
  0%,
  100% {
    box-shadow: 0 0 20px var(--neon-purple);
  }
  50% {
    box-shadow: 0 0 40px var(--neon-purple), 0 0 60px var(--neon-blue);
  }
}

.animate-text-reveal {
  animation: text-reveal 0.8s ease-out forwards;
}

.animate-fade-in {
  animation: fade-in 0.3s ease-out;
}

.animate-float {
  animation: float 6s ease-in-out infinite;
}

.animate-float-delayed {
  animation: float-delayed 8s ease-in-out infinite;
}

.animate-bounce-slow {
  animation: bounce-slow 4s ease-in-out infinite;
}

.animate-neon-pulse {
  animation: neon-pulse 2s ease-in-out infinite;
}

@media (max-width: 768px) {
  .holographic-text {
    font-size: 2.5rem;
  }

  .glass-card-main {
    margin: 0 16px;
  }

  .glass-button,
  .glass-button-danger,
  .neon-button {
    padding: 6px 12px;
    font-size: 12px;
  }

  .cyber-button-primary {
    padding: 14px 24px;
    font-size: 14px;
  }
}

.glow-effect {
  filter: drop-shadow(0 0 10px currentColor);
}

.neon-border {
  border: 2px solid var(--neon-blue);
  box-shadow: 0 0 20px rgba(0, 212, 255, 0.3),
    inset 0 0 20px rgba(0, 212, 255, 0.1);
}

.cyber-grid {
  background-image: linear-gradient(rgba(0, 212, 255, 0.1) 1px, transparent 1px),
    linear-gradient(90deg, rgba(0, 212, 255, 0.1) 1px, transparent 1px);
  background-size: 50px 50px;
}

::-webkit-scrollbar {
  width: 8px;
}

::-webkit-scrollbar-track {
  background: var(--cyber-darker);
}

::-webkit-scrollbar-thumb {
  background: linear-gradient(45deg, var(--neon-purple), var(--neon-blue));
  border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
  background: linear-gradient(45deg, var(--neon-blue), var(--neon-purple));
}

.react-pdf__Document {
  display: flex;
  justify-content: center;
}

.react-pdf__Page {
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3) !important;
  border-radius: 8px !important;
  overflow: hidden !important;
}

.react-pdf__Page__canvas {
  border-radius: 8px !important;
  max-width: 100% !important;
  height: auto !important;
}

.react-pdf__Page__textContent {
  display: none !important;
}

.react-pdf__Page__annotations {
  display: none !important;
}
